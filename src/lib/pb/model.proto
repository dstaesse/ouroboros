/*
 * Ouroboros - Copyright (C) 2016 - 2024
 *
 * Model description messages
 *
 *    Dimitri Staessens <dimitri@ouroboros.rocks>
 *    Sander Vrijders   <sander@ouroboros.rocks>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., http://www.fsf.org/about/contact/.
 */

syntax = "proto2";

message qosspec_msg {
        required uint32 delay        = 1; /* In ms.                   */
        required uint64 bandwidth    = 2; /* In bits/s.               */
        required uint32 availability = 3; /* Class of 9s.             */
        required uint32 loss         = 4; /* Packet loss.             */
        required uint32 ber          = 5; /* Bit error rate, ppb.     */
        required uint32 in_order     = 6; /* In-order delivery.       */
        required uint32 max_gap      = 7; /* In ms.                   */
        required uint32 cypher_s     = 8; /* Crypto strength in bits. */
        required uint32 timeout      = 9; /* Timeout in ms.           */
}

message flow_info_msg {
        required uint32      id      = 1;
        required uint32      n_pid   = 2;
        required uint32      n_1_pid = 3;
        required uint32      mpl     = 4;
        required uint32      state   = 5;
        required qosspec_msg qos     = 6;
}

message name_info_msg {
        required string name   = 1;
        required uint32 pol_lb = 2;
}

message layer_info_msg {
        required string name          = 1;
        required uint32 dir_hash_algo = 2;
}

message ipcp_info_msg {
        required uint32 type  = 1;
        required string name  = 2;
        required uint32 pid   = 3;
        required uint32 state = 4;
}
